# AOC 2024 Day 5, Part 2

# npx dusa src/5b.dusa -f data/day5-test.json -qanswer

#builtin INT_PLUS plus
#builtin INT_MINUS minus

order_rule A B :-
   field _ "rules" is Rules,
   field Rules _ is Rule,
   field Rule 0 is A,
   field Rule 1 is B.

update U I is P :-
   field _ "updates" is Updates,
   field Updates U is Update,
   field Update I is P.
update_length U is Len :-
   field _ "updates" is Updates,
   field Updates U is Update,
   length Update is Len.

correctly_ordered U is? tt :- update U _ is _.
correctly_ordered U is ff :- 
   update U I1 is P1,
   update U I2 is P2,
   I1 < I2,
   order_rule P2 P1.

# Collect wrongly-ordered solutions into conslist
gather_to_sort U Len is nil :-
   correctly_ordered U is ff, 
   update_length U is Len.
gather_to_sort U I is (cons P Ps) :-
   gather_to_sort U I' is Ps,
   I == plus I' -1,
   update U I is P.
to_sort U is P :-
   gather_to_sort U 0 is P.

# Selection sort for conslists
#lazy find_min
find_min Q nil is (tuple Q nil).
find_min Q (cons P Ps) is (tuple R (cons P Rs)) :-
   order_rule Q P,
   find_min Q Ps is (tuple R Rs).
find_min Q (cons P Ps) is (tuple R (cons Q Rs)) :-
   order_rule P Q,
   find_min P Ps is (tuple R Rs).

#lazy sort
sort nil is nil.
sort (cons P Ps) is (cons Q (sort Qs)) :-
   find_min P Ps is (tuple Q Qs).

# Lookup for conslists
#lazy get_at
get_at 0 (cons X _) is X.
get_at N (cons _ Xs) is X :-
   N > 0, 
   get_at (minus N 1) Xs is X.

# Get a value for each update and accum
value U is 0 :- correctly_ordered U is tt.
value U is (get_at Mid (sort Pages)) :-
   to_sort U is Pages,
   update U Mid is _,
   update_length U is (plus Mid Mid 1).

accum 0 is 0.
accum (plus U 1) is (plus Accum (value U)) :- 
   accum U is Accum.
answer is accum Len :- field _ "updates" is Upd,
   length Upd is Len.